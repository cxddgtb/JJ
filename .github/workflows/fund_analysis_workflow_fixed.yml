name: 基金数据分析与买卖点预测

on:
  schedule:
    # 每天北京时间上午9点运行（UTC时间是凌晨1点）
    - cron: '0 1 * * *'
  workflow_dispatch:
    inputs:
      analysis_type:
        description: '分析类型'
        required: true
        default: 'full'
        type: choice
        options:
        - full
        - news_only
        - data_only
      force_update:
        description: '强制更新数据'
        required: false
        default: false
        type: boolean

env:
  PYTHON_VERSION: '3.9.15'
  NODE_VERSION: '16'

jobs:
  setup:
    name: 设置环境
    runs-on: ubuntu-latest
    outputs:
      python-path: ${{ steps.setup-python.outputs.python-path }}
    steps:
    - name: 检出代码
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.REPO_ACCESS_TOKEN }}

    - name: 设置Python
      uses: actions/setup-python@v4
      id: setup-python
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
        cache-dependency-path: 'requirements.txt'

  crawl_fund_data:
    name: 爬取基金数据
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        fund-category: ['stock', 'mixed', 'bond', 'money', 'qdii']
      max-parallel: 5
    steps:
    - name: 检出代码
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.REPO_ACCESS_TOKEN }}

    - name: 设置Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
        cache-dependency-path: 'requirements.txt'

    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: 爬取${{ matrix.fund-category }}基金数据
      env:
        FUND_CATEGORY: ${{ matrix.fund-category }}
      run: |
        python src/crawlers/fund_data_crawler.py --category $FUND_CATEGORY --output data/raw/funds_${{ matrix.fund-category }}.csv

    - name: 上传基金数据
      uses: actions/upload-artifact@v3
      with:
        name: fund-data-${{ matrix.fund-category }}
        path: data/raw/funds_${{ matrix.fund-category }}.csv

  crawl_news:
    name: 爬取基金新闻
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - name: 检出代码
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.REPO_ACCESS_TOKEN }}

    - name: 设置Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
        cache-dependency-path: 'requirements.txt'

    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: 爬取基金新闻
      run: |
        python src/crawlers/news_crawler.py --output data/raw/news.json

    - name: 上传新闻数据
      uses: actions/upload-artifact@v3
      with:
        name: fund-news
        path: data/raw/news.json

  analyze_fund_data:
    name: 分析基金数据
    runs-on: ubuntu-latest
    needs: [setup, crawl_fund_data]
    strategy:
      matrix:
        analysis-type: ['technical', 'sentiment']
    steps:
    - name: 检出代码
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.REPO_ACCESS_TOKEN }}

    - name: 设置Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
        cache-dependency-path: 'requirements.txt'

    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: 下载所有基金数据
      uses: actions/download-artifact@v3
      with:
        path: data/raw/

    - name: 合并基金数据
      run: |
        python utils/merge_data.py --input-dir data/raw/ --output data/processed/all_funds.csv

    - name: ${{ matrix.analysis-type == 'technical' && '技术分析' || '新闻情感分析' }}
      env:
        ANALYSIS_TYPE: ${{ matrix.analysis-type }}
      run: |
        python src/analyzers/${{ matrix.analysis-type }}_analyzer.py --input data/processed/all_funds.csv --output data/processed/${{ matrix.analysis-type }}_signals.json

    - name: 上传分析结果
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.analysis-type }}-signals
        path: data/processed/${{ matrix.analysis-type }}_signals.json

  generate_signals:
    name: 生成买卖信号
    runs-on: ubuntu-latest
    needs: [analyze_fund_data]
    steps:
    - name: 检出代码
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.REPO_ACCESS_TOKEN }}

    - name: 设置Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
        cache-dependency-path: 'requirements.txt'

    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: 下载分析结果
      uses: actions/download-artifact@v3
      with:
        path: data/processed/

    - name: 生成买卖信号
      run: |
        python src/models/trading_signals.py --input data/processed/ --output data/processed/trading_signals.json

    - name: 上传买卖信号
      uses: actions/upload-artifact@v3
      with:
        name: trading-signals
        path: data/processed/trading_signals.json

  generate_report:
    name: 生成分析报告
    runs-on: ubuntu-latest
    needs: [generate_signals]
    steps:
    - name: 检出代码
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.REPO_ACCESS_TOKEN }}

    - name: 设置Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
        cache-dependency-path: 'requirements.txt'

    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: 下载所有数据
      uses: actions/download-artifact@v3
      with:
        path: data/

    - name: 生成买卖点表格
      run: |
        python src/generators/report_generator.py --output data/reports/trading_signals.md

    - name: 生成分析文章
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        python src/generators/article_generator.py --output data/reports/analysis_report.md

    - name: 提交报告
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: '更新基金分析报告'
        file_pattern: 'data/reports/*'

    - name: 上传报告
      uses: actions/upload-artifact@v3
      with:
        name: analysis-reports
        path: data/reports/

  notify:
    name: 发送通知
    runs-on: ubuntu-latest
    needs: [generate_report]
    if: always()
    steps:
    - name: 检出代码
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.REPO_ACCESS_TOKEN }}

    - name: 下载报告
      uses: actions/download-artifact@v3
      with:
        path: data/reports/

    - name: 创建状态摘要
      run: |
        echo "## 基金分析结果" >> $GITHUB_STEP_SUMMARY
        echo "### 买卖点摘要" >> $GITHUB_STEP_SUMMARY
        cat data/reports/trading_signals.md >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 分析报告" >> $GITHUB_STEP_SUMMARY
        echo "详细分析报告已生成并上传为工作流artifact。"
